import asyncio
from datetime import datetime
from live_parser import get_live_events


async def fetcher_loop(notifier):
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø–∞—Ä—Å–∏–Ω–≥–∞"""
    while True:
        events = get_live_events()
        signals = []

        # —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º 1.1‚Äì1.4
        for e in events:
            valid_odds = []
            for o in e["odds"]:
                try:
                    odd = float(o.replace(',', '.'))
                    if 1.1 <= odd <= 1.4:
                        valid_odds.append(odd)
                except ValueError:
                    continue
            if valid_odds:
                signals.append({
                    "sport": e["sport"],
                    "teams": e["teams"],
                    "odds": valid_odds,
                })

        # –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–∞—à–ª–∏ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
        if signals:
            text = "üéØ –ù–∞–π–¥–µ–Ω—ã –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è:\n\n"
            for s in signals[:5]:
                text += f"üèÖ {s['sport']}\n‚öîÔ∏è {s['teams']}\nüí∞ –ö–æ—ç—Ñ: {', '.join(map(str, s['odds']))}\n\n"
            await notifier.send_to_admin(text)
        else:
            print(f"[heartbeat] {datetime.utcnow()} ‚Äî –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–æ–±—ã—Ç–∏–π.")

        await asyncio.sleep(120)  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã
